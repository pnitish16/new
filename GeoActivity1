package com.foodapp.foodbuddies.ui;

import android.content.Context;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.ProgressBar;

import com.foodapp.foodbuddies.R;
import com.foodapp.foodbuddies.model.GeoData;
import com.foodapp.foodbuddies.utils.CommonCode;
import com.foodapp.foodbuddies.utils.SessionData;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapView;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.LatLngBounds;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class GeolocationActivity extends AppCompatActivity implements OnMapReadyCallback {

    private String location;
    private String lat, lon;
    private CommonCode commonCode;
    private SessionData sessionData;
    private Context context;
    private ProgressBar progressBar;
    private List<GeoData> geoDatas;
    private ArrayList<MarkerOptions> markers;
    private HashMap<Marker, GeoData> markermap;
    private MarkerOptions marker;
    private GoogleMap mMap;
    private Marker mapmarker;
    private MapView mapView;
    private LatLngBounds AUSTRALIA = new LatLngBounds(
            new LatLng(-44, 113), new LatLng(-10, 154));

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_geolocation);

        context = GeolocationActivity.this;
        sessionData = new SessionData(context);
        commonCode = new CommonCode(context);

        mapView = (MapView) findViewById(R.id.map);
        mapView.onCreate(savedInstanceState);
        mapView.onResume();
        mapView.getMapAsync(this);
//        if (getIntent().getExtras() != null) {
//            location = getIntent().getStringExtra("location");
//            Log.d("location", location);
//
//            lat = location.split(",")[0];
//            lon = location.split(",")[1];
//        }


    }

    // Include the OnCreate() method here too, as described above.
    @Override
    public void onMapReady(GoogleMap googleMap) {
        // Add a marker in Sydney, Australia,
        // and move the map's camera to the same location.

        mMap = googleMap;
        LatLng sydney = new LatLng(-33.852, 151.211);
        LatLng sydney1 = new LatLng(-33.852, 154.211);
        mMap.addMarker(new MarkerOptions().position(sydney)
                .title("Marker in Sydney"));

        LatLngBounds currentBounds = new LatLngBounds(
                sydney, sydney1);

        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(currentBounds.getCenter(), 0));
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(sydney, 5));

        geoDatas = new ArrayList<>();
        for (int i = 0; i < 5; i++) {
            GeoData geoData = new GeoData("", "", "", "19.996201","73.747015", "", "", "","");
            geoDatas.add(geoData);
        }

        putMarkers();


//        plotMarkers(geoDatas);
    }


    private void plotMarkers(List<GeoData> geoDatas) {
        putMarkers();
    }

    private void putMarkers() {

        markers = new ArrayList<MarkerOptions>();

        //setting up the markers on the map
        markermap = new HashMap<Marker, GeoData>();

        //Adding Point of interest items
        for (int i = 0; i < geoDatas.size(); i++) {
            GeoData data = geoDatas.get(i);
            marker = new MarkerOptions().position(new LatLng(Double.parseDouble(data.getBorrowerLat()), Double.parseDouble(data.getBorrowerLong()))).title(data.getId());
            marker.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));
//            googleMap.addMarker(marker);

            //Marker addition
            mapmarker = placeMarker(data);
            markermap.put(mapmarker, data);
            markers.add(marker);
        }



        //Current Location
//        LatLng currentLatLng = CommonCode.getCurrentLatLong(context);
//        Location current = new Location("mylocation");
//        current.setLatitude(currentLatLng.latitude);
//        current.setLongitude(currentLatLng.longitude);
    }


    public Marker placeMarker(GeoData pointItem) {
        Marker marker = mMap.addMarker(
                new MarkerOptions()
                        .position(new LatLng(Double.parseDouble(pointItem.getBorrowerLat()), Double.parseDouble(pointItem.getBorrowerLong())))
                        .title(pointItem.getId())
                        .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED))
                        .snippet(pointItem.getId()));
        return marker;
    }
}


